CREATE TABLE "mytable" (
  "-- Spotify SQL Analysis Queries" text
);

INSERT INTO "mytable" ("-- Spotify SQL Analysis Queries")
VALUES
('-- 1. Retrieve the names of all tracks that have more than 10 million streams'),
('SELECT Track'),
('FROM cleaned_dataset'),
('WHERE Stream > 10000000;'),
('-- ---------------------------------------------------'),
('-- 2. List all albums along with their respective artists'),
('SELECT DISTINCT Album'),
('FROM cleaned_dataset;'),
('-- ---------------------------------------------------'),
('-- 3. Get the total number of comments for tracks where licensed = TRUE'),
('SELECT Track'),
('FROM cleaned_dataset'),
('WHERE Licensed = 1'),
('GROUP BY Track;'),
('-- ---------------------------------------------------'),
('-- 4. Find all tracks that belong to the album type ''single'''),
('SELECT Track'),
('FROM cleaned_dataset'),
('WHERE Album_type = ''single'';'),
('-- ---------------------------------------------------'),
('-- 5. Count the total number of tracks by each artist'),
('SELECT Artist'),
('FROM cleaned_dataset'),
('GROUP BY Artist;'),
('-- ---------------------------------------------------'),
('-- 6. Calculate the average danceability of tracks in each album'),
('SELECT Album'),
('FROM cleaned_dataset'),
('GROUP BY Album;'),
('-- ---------------------------------------------------'),
('-- 7. Find the top 5 tracks with the highest energy values'),
('-- Note: Use LIMIT 5 if your SQL dialect supports it'),
('SELECT Track'),
('FROM cleaned_dataset'),
('ORDER BY Energy DESC'),
('LIMIT 5;'),
('-- ---------------------------------------------------'),
('-- 8. List all tracks along with their views and likes where official_video = TRUE'),
('SELECT Track'),
('FROM cleaned_dataset'),
('WHERE official_video = 1;'),
('-- ---------------------------------------------------'),
('-- 9. For each album'),
('SELECT Album'),
('FROM cleaned_dataset'),
('GROUP BY Album;'),
('-- ---------------------------------------------------'),
('-- 10. Retrieve the track names that have been streamed on Spotify more than YouTube'),
('SELECT Track'),
('FROM cleaned_dataset'),
('GROUP BY Track'),
('HAVING'),
('SUM(CASE WHEN most_playedon = ''Spotify'' THEN 1 ELSE 0 END) >'),
('SUM(CASE WHEN most_playedon = ''Youtube'' THEN 1 ELSE 0 END);'),
('-- ---------------------------------------------------'),
('-- 11. Find the top 3 most-viewed tracks for each artist using window functions'),
('SELECT'),
('track_id'),
('track_name'),
('artist_id'),
('artist_name'),
('views'),
('FROM ('),
('SELECT'),
('track_id'),
('track_name'),
('artist_id'),
('artist_name'),
('views'),
('ROW_NUMBER() OVER ('),
('PARTITION BY artist_id'),
('ORDER BY views DESC'),
(') AS rank'),
('FROM cleaned_dataset'),
(') AS ranked_tracks'),
('WHERE rank <= 3;'),
('-- ---------------------------------------------------'),
('-- 12. Find tracks where the liveness score is above the average'),
('SELECT Track'),
('FROM cleaned_dataset'),
('WHERE Liveness > ('),
('SELECT AVG(Liveness)'),
('FROM cleaned_dataset'),
(');'),
('-- ---------------------------------------------------'),
('-- 13. Use a WITH clause to calculate the difference between the highest and lowest energy values for tracks in each album'),
('WITH cte AS ('),
('SELECT'),
('Album'),
('MAX(Energy) AS highest_energy'),
('MIN(Energy) AS lowest_energy'),
('FROM cleaned_dataset'),
('GROUP BY Album'),
(')'),
('SELECT'),
('Album'),
('highest_energy - lowest_energy AS energy_diff'),
('FROM cte'),
('ORDER BY energy_diff DESC;'),
('-- ---------------------------------------------------'),
('-- 14. Find tracks where the energy-to-liveness ratio is greater than 1.2'),
('SELECT'),
('Track'),
('Energy / Liveness AS Energy_to_Liveness_Ratio'),
('FROM cleaned_dataset'),
('WHERE Liveness != 0 AND Energy / Liveness > 1.2;'),
('-- ---------------------------------------------------'),
('-- 15. Calculate the cumulative sum of likes for tracks ordered by the number of views using window functions'),
('SELECT'),
('Track'),
('Views'),
('Likes'),
('SUM(Likes) OVER (ORDER BY Views DESC) AS Cumulative_Likes'),
('FROM cleaned_dataset;');
